"""
Django settings for MyBigHouses project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# sys.path.insert(0, '..')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c*u1bxd@y!ed1avb%^5pebrm10t4&9s4%giam*m76&@qwlob9%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 注册 user app
    'user',
    # 注册 house app
    'house',
    'corsheaders',
    # 全文搜索框架
    'haystack',
    # 富文本编辑器
    'tinymce',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyBigHouses.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['apptemplates/dist'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },

]

WSGI_APPLICATION = 'MyBigHouses.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases


# 此处注册后台使用的数据库，可以注册多种数据库 ENGINE
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'MBH',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '42.159.122.43',
        'PORT': '3306',
        'CONN_MAX_AGE': 9,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

# 系统语言：中文
LANGUAGE_CODE = 'zh-hans'

# 时区： 亚洲上海
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/


# 静态资源存储目录
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'apptemplates/dist/static')]
STATIC_URL = '/static/'


# 使用自定义的 User 类， 覆盖Django提供的类
AUTH_USER_MODEL = 'user.User'


# 配置邮箱引擎
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
# 实际发件人
EMAIL_HOST_USER = 'amisher@163.com'
# 发件邮箱的授权码
EMAIL_HOST_PASSWORD = 'django2018'
# 接受方显示的<发件人>名称
EMAIL_FROM = u'我的大房子<amisher@163.com>'


# 使用 redis 作为 celery 的 broker
CELERY_BROKER_URL = 'redis://42.159.122.43:6380'
CELERY_RESULT_BACKEND = 'redis://42.159.122.43:6380'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = (
    '127.0.0.1:8000',
    '127.0.0.1:8080'
)

CORS_ALLOW_METHODS = ('*')

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Access-Control-Allow-Origin',
    'Access-Control-Allow-Methods',
    'Access-Control-Allow-Headers'
)


# 配置redis存储django缓存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://42.159.122.43:6380/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "User&House": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://42.159.122.43:6380/1",
    }
}

# 配置redis存储session
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = 'default'

# 配置静态资源目录
MEDIA_ROOT = os.path.join(BASE_DIR, "media", "images")
MEDIA_URL = "media/images/"

# 房源列表每页数目
LIST_PAGE_ITEMS = 15

# haystack 配置
# HAYSTACK_CONNECTIONS = {
#     'default':{
#         'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
#         'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
#     }
# }

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
        'URL': "http://42.159.88.246:9200",
        'INDEX_NAME': "house_index",
    }
}

HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10  # 搜索结果每页显示个数

# 富文本编辑器
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}